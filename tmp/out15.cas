CASL	START	BEGIN	;
BEGIN	LAD	GR6, 0
	LAD	GR7, LIBBUF
	PUSH	5	; line 84
	LD	GR3, =0	; line 84
	POP		GR2	; line 84
	ST	GR2, VAR, GR3	; line 84
	PUSH	1	; line 85
	LD	GR3, =1	; line 85
	POP		GR2	; line 85
	ST	GR2, VAR, GR3	; line 85
	PUSH	0	; line 86
	LD	GR3, =2	; line 86
	POP		GR2	; line 86
	ST	GR2, VAR, GR3	; line 86
	PUSH	3	; line 87
	LD	GR3, =3	; line 87
	POP		GR2	; line 87
	ST	GR2, VAR, GR3	; line 87
	PUSH	5	; line 88
	LD	GR3, =4	; line 88
	POP		GR2	; line 88
	ST	GR2, VAR, GR3	; line 88
	PUSH	1	; line 89
	LD	GR3, =5	; line 89
	POP		GR2	; line 89
	ST	GR2, VAR, GR3	; line 89
	PUSH	3	; line 90
	LD	GR3, =6	; line 90
	POP		GR2	; line 90
	ST	GR2, VAR, GR3	; line 90
	PUSH	6	; line 91
	LD	GR3, =7	; line 91
	POP		GR2	; line 91
	ST	GR2, VAR, GR3	; line 91
	PUSH	2	; line 92
	LD	GR3, =8	; line 92
	POP		GR2	; line 92
	ST	GR2, VAR, GR3	; line 92
	PUSH	4	; line 93
	LD	GR3, =9	; line 93
	POP		GR2	; line 93
	ST	GR2, VAR, GR3	; line 93
	PUSH	0	; line 94
	LD	GR3, =10	; line 94
	POP		GR2	; line 94
	ST	GR2, VAR, GR3	; line 94
	PUSH	2	; line 95
	LD	GR3, =11	; line 95
	POP		GR2	; line 95
	ST	GR2, VAR, GR3	; line 95
	LD	GR2, =1991	; line 97
	LD	GR3, =12	; line 97
	ST	GR2, VAR, GR3	; line 97
	LD	GR2, =1	; line 98
	LD	GR3, =13	; line 98
	ST	GR2, VAR, GR3	; line 98
	LD	GR2, =1	; line 99
	LD	GR3, =14	; line 99
	ST	GR2, VAR, GR3	; line 99
	SUBA	GR8, =5	; line 100
	LD	GR3, =12	; line 100
	LD	GR2, VAR, GR3	; line 100
	LD	GR3, =0	; line 100
	ADDA	GR3, GR8	; line 100
	ST	GR2, 0, GR3	; line 100
	LD	GR3, =13	; line 100
	LD	GR2, VAR, GR3	; line 100
	LD	GR3, =1	; line 100
	ADDA	GR3, GR8	; line 100
	ST	GR2, 0, GR3	; line 100
	LD	GR3, =14	; line 100
	LD	GR2, VAR, GR3	; line 100
	LD	GR3, =2	; line 100
	ADDA	GR3, GR8	; line 100
	ST	GR2, 0, GR3	; line 100
	LD	GR4, GR8	; line 100
	CALL	PROC0	; line 100
	LD	GR0, =5	; line 100
	ADDA	GR4, GR0	; line 100
	ADDA	GR8, GR0	; line 100
	SUBA	GR8, =4	; line 101
	LD	GR3, =12	; line 101
	LD	GR2, VAR, GR3	; line 101
	LD	GR3, =0	; line 101
	ADDA	GR3, GR8	; line 101
	ST	GR2, 0, GR3	; line 101
	LD	GR3, =13	; line 101
	LD	GR2, VAR, GR3	; line 101
	LD	GR3, =1	; line 101
	ADDA	GR3, GR8	; line 101
	ST	GR2, 0, GR3	; line 101
	LD	GR3, =14	; line 101
	LD	GR2, VAR, GR3	; line 101
	LD	GR3, =2	; line 101
	ADDA	GR3, GR8	; line 101
	ST	GR2, 0, GR3	; line 101
	LD	GR3, =15	; line 101
	LD	GR2, VAR, GR3	; line 101
	LD	GR3, =3	; line 101
	ADDA	GR3, GR8	; line 101
	ST	GR2, 0, GR3	; line 101
	LD	GR4, GR8	; line 101
	CALL	PROC1	; line 101
	LD	GR0, =4	; line 101
	ADDA	GR4, GR0	; line 101
	ADDA	GR8, GR0	; line 101
	LD	GR2, =2017	; line 103
	LD	GR3, =12	; line 103
	ST	GR2, VAR, GR3	; line 103
	LD	GR2, =9	; line 104
	LD	GR3, =13	; line 104
	ST	GR2, VAR, GR3	; line 104
	LD	GR2, =28	; line 105
	LD	GR3, =14	; line 105
	ST	GR2, VAR, GR3	; line 105
	SUBA	GR8, =5	; line 106
	LD	GR3, =12	; line 106
	LD	GR2, VAR, GR3	; line 106
	LD	GR3, =0	; line 106
	ADDA	GR3, GR8	; line 106
	ST	GR2, 0, GR3	; line 106
	LD	GR3, =13	; line 106
	LD	GR2, VAR, GR3	; line 106
	LD	GR3, =1	; line 106
	ADDA	GR3, GR8	; line 106
	ST	GR2, 0, GR3	; line 106
	LD	GR3, =14	; line 106
	LD	GR2, VAR, GR3	; line 106
	LD	GR3, =2	; line 106
	ADDA	GR3, GR8	; line 106
	ST	GR2, 0, GR3	; line 106
	LD	GR4, GR8	; line 106
	CALL	PROC0	; line 106
	LD	GR0, =5	; line 106
	ADDA	GR4, GR0	; line 106
	ADDA	GR8, GR0	; line 106
	SUBA	GR8, =4	; line 107
	LD	GR3, =12	; line 107
	LD	GR2, VAR, GR3	; line 107
	LD	GR3, =0	; line 107
	ADDA	GR3, GR8	; line 107
	ST	GR2, 0, GR3	; line 107
	LD	GR3, =13	; line 107
	LD	GR2, VAR, GR3	; line 107
	LD	GR3, =1	; line 107
	ADDA	GR3, GR8	; line 107
	ST	GR2, 0, GR3	; line 107
	LD	GR3, =14	; line 107
	LD	GR2, VAR, GR3	; line 107
	LD	GR3, =2	; line 107
	ADDA	GR3, GR8	; line 107
	ST	GR2, 0, GR3	; line 107
	LD	GR3, =15	; line 107
	LD	GR2, VAR, GR3	; line 107
	LD	GR3, =3	; line 107
	ADDA	GR3, GR8	; line 107
	ST	GR2, 0, GR3	; line 107
	LD	GR4, GR8	; line 107
	CALL	PROC1	; line 107
	LD	GR0, =4	; line 107
	ADDA	GR4, GR0	; line 107
	ADDA	GR8, GR0	; line 107
	RET
PROC0		NOP
	LD	GR3, =1	; line 8
	ADDA	GR3, GR4	; line 8
	LD	GR2, 0, GR3	; line 8
	LD	GR1, =1	; line 8
	CPA	GR2, GR1	; line 8
	JNZ	ENDIF0	; line 8
	LD	GR3, =0	; line 10
	ADDA	GR3, GR4	; line 10
	LD	GR2, 0, GR3	; line 10
	LD	GR1, =1901	; line 10
	SUBA	GR2, GR1	; line 10
	LD	GR3, =3	; line 10
	ADDA	GR3, GR4	; line 10
	ST	GR2, 0, GR3	; line 10
	JUMP	ENDEL0	; line 13
ENDIF0	LD	GR3, =1	; line 14
	ADDA	GR3, GR4	; line 14
	LD	GR2, 0, GR3	; line 14
	LD	GR1, =2	; line 14
	CPA	GR2, GR1	; line 14
	JNZ	ENDIF1	; line 14
	LD	GR3, =0	; line 16
	ADDA	GR3, GR4	; line 16
	LD	GR2, 0, GR3	; line 16
	LD	GR1, =1901	; line 16
	SUBA	GR2, GR1	; line 16
	LD	GR3, =3	; line 16
	ADDA	GR3, GR4	; line 16
	ST	GR2, 0, GR3	; line 16
	JUMP	ENDEL1	; line 19
ENDIF1	LD	GR3, =0	; line 20
	ADDA	GR3, GR4	; line 20
	LD	GR2, 0, GR3	; line 20
	LD	GR1, =1900	; line 20
	SUBA	GR2, GR1	; line 20
	LD	GR3, =3	; line 20
	ADDA	GR3, GR4	; line 20
	ST	GR2, 0, GR3	; line 20
ENDEL1	NOP
ENDEL0	PUSH	4	; line 24
	LD	GR3, =3	; line 24
	ADDA	GR3, GR4	; line 24
	LD	GR1, 0, GR3	; line 24
	POP		GR2	; line 24
	ADDA	GR2, GR1	; line 24
	PUSH	0, 	GR2	; line 24
	LD	GR3, =3	; line 24
	ADDA	GR3, GR4	; line 24
	LD	GR1, 0, GR3	; line 24
	LD	GR2, =4	; line 24
	CALL	DIV	; line 24
	LD	GR1, GR2	; line 24
	POP		GR2	; line 24
	ADDA	GR2, GR1	; line 24
	PUSH	0, 	GR2	; line 24
	LD	GR3, =1	; line 24
	ADDA	GR3, GR4	; line 24
	LD	GR1, 0, GR3	; line 24
	LD	GR3, =0	; line 24
	SUBA	GR1, =1	; line 24
	ADDA	GR3, GR1	; line 24
	LD	GR1, VAR, GR3	; line 24
	POP		GR2	; line 24
	ADDA	GR2, GR1	; line 24
	PUSH	0, 	GR2	; line 24
	LD	GR3, =2	; line 24
	ADDA	GR3, GR4	; line 24
	LD	GR1, 0, GR3	; line 24
	LD	GR2, =1	; line 24
	SUBA	GR1, GR2	; line 24
	POP		GR2	; line 24
	ADDA	GR2, GR1	; line 24
	LD	GR3, =4	; line 24
	ADDA	GR3, GR4	; line 24
	ST	GR2, 0, GR3	; line 24
WHILE2	LD	GR3, =4	; line 25
	ADDA	GR3, GR4	; line 25
	LD	GR2, 0, GR3	; line 25
	LD	GR1, =7	; line 25
	CPA	GR2, GR1	; line 25
	JMI	ENDWH2	; line 25
	LD	GR3, =4	; line 27
	ADDA	GR3, GR4	; line 27
	LD	GR2, 0, GR3	; line 27
	LD	GR1, =7	; line 27
	SUBA	GR2, GR1	; line 27
	LD	GR3, =4	; line 27
	ADDA	GR3, GR4	; line 27
	ST	GR2, 0, GR3	; line 27
	JUMP	WHILE2	; line 25
ENDWH2	LD	GR3, =4	; line 29
	ADDA	GR3, GR4	; line 29
	LD	GR2, 0, GR3	; line 29
	LD	GR3, =15	; line 29
	ST	GR2, VAR, GR3	; line 29
	RET
PROC1		NOP
	LD	GR3, =0	; line 34
	ADDA	GR3, GR4	; line 34
	LD	GR2, 0, GR3	; line 34
	CALL	WRTINT	; line 34
	LD	GR2, =45	; line 34
	CALL	WRTCH	; line 34
	LD	GR3, =1	; line 34
	ADDA	GR3, GR4	; line 34
	LD	GR2, 0, GR3	; line 34
	CALL	WRTINT	; line 34
	LD	GR2, =45	; line 34
	CALL	WRTCH	; line 34
	LD	GR3, =2	; line 34
	ADDA	GR3, GR4	; line 34
	LD	GR2, 0, GR3	; line 34
	CALL	WRTINT	; line 34
	LAD	GR2, CHAR2	; line 34
	LD	GR1, =3	; line 34
	CALL	WRTSTR	; line 34
	CALL	WRTLN	; line 34
	LD	GR3, =3	; line 35
	ADDA	GR3, GR4	; line 35
	LD	GR2, 0, GR3	; line 35
	LD	GR1, =0	; line 35
	CPA	GR2, GR1	; line 35
	JNZ	ENDIF4	; line 35
	LAD	GR2, CHAR3	; line 37
	LD	GR1, =6	; line 37
	CALL	WRTSTR	; line 37
	CALL	WRTLN	; line 37
	JUMP	ENDEL4	; line 40
ENDIF4	LD	GR3, =3	; line 41
	ADDA	GR3, GR4	; line 41
	LD	GR2, 0, GR3	; line 41
	LD	GR1, =1	; line 41
	CPA	GR2, GR1	; line 41
	JNZ	ENDIF5	; line 41
	LAD	GR2, CHAR4	; line 43
	LD	GR1, =6	; line 43
	CALL	WRTSTR	; line 43
	CALL	WRTLN	; line 43
	JUMP	ENDEL5	; line 46
ENDIF5	LD	GR3, =3	; line 47
	ADDA	GR3, GR4	; line 47
	LD	GR2, 0, GR3	; line 47
	LD	GR1, =2	; line 47
	CPA	GR2, GR1	; line 47
	JNZ	ENDIF6	; line 47
	LAD	GR2, CHAR5	; line 49
	LD	GR1, =7	; line 49
	CALL	WRTSTR	; line 49
	CALL	WRTLN	; line 49
	JUMP	ENDEL6	; line 52
ENDIF6	LD	GR3, =3	; line 53
	ADDA	GR3, GR4	; line 53
	LD	GR2, 0, GR3	; line 53
	LD	GR1, =3	; line 53
	CPA	GR2, GR1	; line 53
	JNZ	ENDIF7	; line 53
	LAD	GR2, CHAR6	; line 55
	LD	GR1, =9	; line 55
	CALL	WRTSTR	; line 55
	CALL	WRTLN	; line 55
	JUMP	ENDEL7	; line 58
ENDIF7	LD	GR3, =3	; line 59
	ADDA	GR3, GR4	; line 59
	LD	GR2, 0, GR3	; line 59
	LD	GR1, =4	; line 59
	CPA	GR2, GR1	; line 59
	JNZ	ENDIF8	; line 59
	LAD	GR2, CHAR7	; line 61
	LD	GR1, =8	; line 61
	CALL	WRTSTR	; line 61
	CALL	WRTLN	; line 61
	JUMP	ENDEL8	; line 64
ENDIF8	LD	GR3, =3	; line 65
	ADDA	GR3, GR4	; line 65
	LD	GR2, 0, GR3	; line 65
	LD	GR1, =5	; line 65
	CPA	GR2, GR1	; line 65
	JNZ	ENDIF9	; line 65
	LAD	GR2, CHAR8	; line 67
	LD	GR1, =6	; line 67
	CALL	WRTSTR	; line 67
	CALL	WRTLN	; line 67
	JUMP	ENDEL9	; line 70
ENDIF9	LD	GR3, =3	; line 71
	ADDA	GR3, GR4	; line 71
	LD	GR2, 0, GR3	; line 71
	LD	GR1, =6	; line 71
	CPA	GR2, GR1	; line 71
	JNZ	ENDIF10	; line 71
	LAD	GR2, CHAR9	; line 73
	LD	GR1, =8	; line 73
	CALL	WRTSTR	; line 73
	CALL	WRTLN	; line 73
ENDIF10	NOP
ENDEL9	NOP
ENDEL8	NOP
ENDEL7	NOP
ENDEL6	NOP
ENDEL5	NOP
ENDEL4	RET
CHAR0	DC	'-'
CHAR1	DC	'-'
CHAR2	DC	' IS'
CHAR3	DC	'SUNDAY'
CHAR4	DC	'MONDAY'
CHAR5	DC	'TUESDAY'
CHAR6	DC	'WEDNESDAY'
CHAR7	DC	'THURSDAY'
CHAR8	DC	'FRIDAY'
CHAR9	DC	'SATURDAY'
VAR	DS	16
LIBBUF	DS	256
	END
; lib.cas
;============================================================
; MULT: 掛け算を行うサブルーチン
; GR1 * GR2 -> GR2
MULT	START
	PUSH	0,GR1	; GR1の内容をスタックに退避
	PUSH	0,GR3	; GR3の内容をスタックに退避
	PUSH	0,GR4	; GR4の内容をスタックに退避
	LAD	GR3,0	; GR3を初期化
	LD	GR4,GR2
	JPL	LOOP
	XOR	GR4,=#FFFF
	ADDA	GR4,=1
LOOP	SRL	GR4,1
	JOV	ONE
	JUMP	ZERO
ONE	ADDL	GR3,GR1
ZERO	SLL	GR1,1
	AND	GR4,GR4
	JNZ	LOOP
	CPA	GR2,=0
	JPL	END
	XOR	GR3,=#FFFF
	ADDA	GR3,=1
END	LD	GR2,GR3
	POP	GR4
	POP	GR3
	POP	GR1
	RET
	END
;============================================================
; DIV 割り算を行うサブルーチン
; GR1 / GR2 -> 商は GR2, 余りは GR1
DIV	START
	PUSH	0,GR3
	ST	GR1,A
	ST	GR2,B
	CPA	GR1,=0
	JPL	SKIPA
	XOR	GR1,=#FFFF
	ADDA	GR1,=1
SKIPA	CPA	GR2,=0
	JZE	SKIPD
	JPL	SKIPB
	XOR	GR2,=#FFFF
	ADDA	GR2,=1
SKIPB	LD	GR3,=0
LOOP	CPA	GR1,GR2
	JMI	STEP
	SUBA	GR1,GR2
	LAD	GR3,1,GR3
	JUMP	LOOP
STEP	LD	GR2,GR3
	LD	GR3,A
	CPA	GR3,=0
	JPL	SKIPC
	XOR	GR1,=#FFFF
	ADDA	GR1,=1
SKIPC	XOR	GR3,B
	CPA	GR3,=0
	JZE	SKIPD
	JPL	SKIPD
	XOR	GR2,=#FFFF
	ADDA	GR2,=1
SKIPD	POP	GR3
	RET
A	DS	1
B	DS	1
	END
;============================================================
; 入力装置から数値データを読み込み，
; その内容をGR2が指すアドレスに格納するサブルーチン
RDINT	START
	PUSH	0,GR1	; GR1の内容をスタックに退避
	PUSH	0,GR3	; GR3の内容をスタックに退避
	PUSH	0,GR4	; GR4の内容をスタックに退避
	PUSH	0,GR5	; GR5の内容をスタックに退避
	PUSH	0,GR6	; GR6の内容をスタックに退避
	LD	GR5,GR2	; GR2が指す番地をGR5にコピー
	LD	GR2,=0	; GR2を初期化
	LD	GR3,=0	; GR3を初期化
	IN	INAREA,INLEN	; 入力を受け取る
	; 入力がnullかどうかのチェック
	CPA	GR3,INLEN
	JZE	ERROR
	; 最初の文字が'-'かどうかのチェック
	LD	GR4,INAREA,GR3
	LAD	GR3,1,GR3
	LD	GR6,GR4	; GR6に入力された先頭の文字を保存
	CPL	GR4,=#002D	; '-'かどうか
	JZE	LOOP
	CPL	GR4,='0'	; 数値かどうかのチェック
	JMI	ERROR
	CPL	GR4,='9'
	JPL	ERROR
	XOR	GR4,=#0030	; 数値だったら変換
	ADDA	GR2,GR4
	; 「すでに読み込んだ数値を10倍して，新しく読み込んだ数値と足す」を繰り返す
LOOP	CPA	GR3,INLEN
	JZE	CODE	; 入力された文字数とGR3が同じであればループを抜ける
	LD	GR1,=10
	CALL	MULT	; GR2の値を10倍する
	LD	GR4,INAREA,GR3
	CPL	GR4,='0'	; 数値かどうかのチェック
	JMI	ERROR
	CPL	GR4,='9'
	JPL	ERROR
	XOR	GR4,=#0030	; GR4の内容を数値に変換
	ADDA	GR2,GR4	; GR2にGR1の内容を足す
	LAD	GR3,1,GR3	; GR3(ポインタ)をインクリメント
	JUMP	LOOP
	; 最初の文字が'-'であった場合は-1倍する
CODE	CPL	GR6,=#002D
	JNZ	END
	XOR	GR2,=#FFFF
	LAD	GR2,1,GR2
	JUMP	END
	; エラーを出力する
ERROR	OUT	ERRSTR,ERRLEN
END	ST	GR2,0,GR5	; GR2の内容をGR5が指す番地に格納する
	LD	GR2,GR5	; GR5が指す番地をGR2に戻す
	POP	GR6
	POP	GR5
	POP	GR4
	POP	GR3
	POP	GR1
	RET
ERRSTR	DC	'illegal input'
ERRLEN	DC	13
INAREA	DS	6
INLEN	DS	1
	END
;============================================================
; 入力装置から文字を読み込み，
; その内容をGR2が指すアドレスに格納するサブルーチン
RDCH	START
	IN	INCHAR,INLEN
	LD	GR1,INCHAR
	ST	GR1,0,GR2
	RET
INCHAR	DS	1
INLEN	DS	1
	END
;============================================================
; 入力装置から，GR1の文字数を読み込む．
; 読み込んだ文字列は，GR2 が指すアドレスから順に格納される
RDSTR	START
	PUSH	0,GR3	; GR3の内容をスタックに退避
	PUSH	0,GR4	; GR4の内容をスタックに退避
	PUSH	0,GR5	; GR5の内容をスタックに退避
	LAD	GR4,0	; GR4を初期化
	IN	INSTR,INLEN
LOOP	CPA	GR4,GR1
	JZE	END	; GR1で指定された文字数を超えたら終わり
	CPA	GR4,INLEN
	JZE	END	; 入力された文字数を超えたら終わり
	LD	GR5,GR2
	ADDA	GR5,GR4	; 文字の格納先番地を計算
	LD	GR3,INSTR,GR4
	ST	GR3,0,GR5
	LAD	GR4,1,GR4
	JUMP	LOOP
END	POP	GR5
	POP	GR4
	POP	GR3
	RET
INSTR	DS	256
INLEN	DS	1
	END
;============================================================
; 入力装置からの文字列を改行まで読み飛ばすサブルーチン
RDLN	START
	IN	INAREA,INLEN
	RET
INAREA	DS	256
INLEN	DS	1
	END
;============================================================
; GR2の内容（数値データ）を出力装置に書き出すサブルーチン
; このサブルーチンが呼ばれたとき，
; GR7には，出力用番地の先頭アドレスが，
; GR6には，現在出力用番地に入っている文字数が，
; それぞれ格納されている．
WRTINT	START
	PUSH	0,GR1	; GR1の内容をスタックに退避
	PUSH	0,GR2	; GR2の内容をスタックに退避
	PUSH	0,GR3	; GR3の内容をスタックに退避
	PUSH	0,GR2	; 数値データをもう一度スタックに退避
	LD	GR3,=0	; GR3はインデックスとして用いる
	; 数値データが負数である場合は，正の数に変換
	CPA	GR2,=0
	JPL	LOOP1
	XOR	GR2,=#FFFF
	ADDA	GR2,=1
	; 数値データを変換しながら，バッファに格納
LOOP1	LD	GR1,GR2
	LD	GR2,=10
	CALL	DIV
	XOR	GR1,=#0030
	ST	GR1,BUFFER,GR3
	LAD	GR3,1,GR3
	CPA	GR2,=0
	JNZ	LOOP1
	; 数値データが負数であれば，'-'を追加
	POP	GR2
	CPA	GR2,=0
	JZE	LOOP2
	JPL	LOOP2
	LD	GR1,='-'
	ST	GR1,BUFFER,GR3
	LAD	GR3,1,GR3
	; BUFFERを逆順にたどりながら，出力用バッファに格納
LOOP2	LAD	GR3,-1,GR3
	LD	GR1,BUFFER,GR3
	LD	GR2,GR7
	ADDA	GR2,GR6
	ST	GR1,0,GR2
	LAD	GR6,1,GR6
	CPA	GR3,=0
	JNZ	LOOP2
END	POP	GR3
	POP	GR2
	POP	GR1
	RET
BUFFER	DS	6
	END
;============================================================
; GR2の内容（文字）を出力装置に書き出すサブルーチン
; このサブルーチンが呼ばれたとき，
; GR7には，出力用番地の先頭アドレスが，
; GR6には，現在出力用番地に入っている文字数が，
; それぞれ格納されている．
WRTCH	START
	PUSH	0,GR1	; GR1の内容をスタックに退避
	LD	GR1,GR7
	ADDA	GR1,GR6	; GR1に次の文字を格納する番地を代入
	ST	GR2,0,GR1
	LAD	GR6,1,GR6
	POP	GR1
	RET
	END
;============================================================
; [デバッグ未完了!!!!!!!!!!!!注意!!!!!!!!!!!!!!!!!!!!]
; コンマを出力装置に書き出すサブルーチン
; このサブルーチンが呼ばれたとき，
; GR1とGR2を使用する。
WRTCONM	START
	PUSH	0,GR1
	PUSH	0,GR2
	PUSH	0,GR3	; GR3の内容をスタックに退避
	PUSH	0,GR4	; GR4の内容をスタックに退避
	PUSH	0,GR5	; GR5の内容をスタックに退避
	LAD	GR3,0	; GR3は制御変数として用いる
	LAD	GR2,CONM
	LD	GR1,=2
LOOP	CPA	GR3,GR1
	JZE	END
	LD	GR4,GR2
	ADDA	GR4,GR3	; 出力する文字の格納番地を計算
	LD	GR5,0,GR4	; 出力する文字をレジスタにコピー
	LD	GR4,GR7
	ADDA	GR4,GR6	; 出力先の番地を計算
	ST	GR5,0,GR4	; 出力装置に書き出し
	LAD	GR3,1,GR3
	LAD	GR6,1,GR6
	JUMP	LOOP
END	POP	GR5
	POP	GR4
	POP	GR3
	POP	GR2
	POP	GR1
	RET
CONM	DC	', '
	END
;============================================================
; [デバッグ未完了!!!!!!!!!!!!注意!!!!!!!!!!!!!!!!!!!!]
; GR2の内容（boolean）を出力装置に書き出すサブルーチン
; このサブルーチンが呼ばれたとき，
; GR7には，出力用番地の先頭アドレスが，
; GR6には，現在出力用番地に入っている文字数が，
; それぞれ格納されている．
WRTBOL	START
	PUSH	0,GR1	; GR1の内容をスタックに退避
	PUSH	0,GR3	; GR3の内容をスタックに退避
	PUSH	0,GR4	; GR4の内容をスタックに退避
	PUSH	0,GR5	; GR5の内容をスタックに退避
	LAD	GR3,0	; GR3は制御変数として用いる
	CPL	GR2,=0	; GR2がfalseか比較
	JZE	FLSP
	LAD	GR2,TREV
	LD	GR1,=4
	JUMP	LOOP
FLSP	LAD	GR2,FLSV
	LD	GR1,=5
LOOP	CPA	GR3,GR1
	JZE	END
	LD	GR4,GR2
	ADDA	GR4,GR3	; 出力する文字の格納番地を計算
	LD	GR5,0,GR4	; 出力する文字をレジスタにコピー
	LD	GR4,GR7
	ADDA	GR4,GR6	; 出力先の番地を計算
	ST	GR5,0,GR4	; 出力装置に書き出し
	LAD	GR3,1,GR3
	LAD	GR6,1,GR6
	JUMP	LOOP
END	POP	GR5
	POP	GR4
	POP	GR3
	POP	GR1
	RET
FLSV	DC	'false'
TREV	DC	'true'
	END
;============================================================
; GR2の指すメモリ番地から，長さGR1の文字列を出力装置に書き出すサブルーチン
; このサブルーチンが呼ばれたとき，
; GR7には，出力用番地の先頭アドレスが，
; GR6には，現在出力用番地に入っている文字数が，
; それぞれ格納されている．
WRTSTR	START
	PUSH	0,GR3	; GR3の内容をスタックに退避
	PUSH	0,GR4	; GR4の内容をスタックに退避
	PUSH	0,GR5	; GR5の内容をスタックに退避
	LAD	GR3,0	; GR3は制御変数として用いる
LOOP	CPA	GR3,GR1
	JZE	END
	LD	GR4,GR2
	ADDA	GR4,GR3	; 出力する文字の格納番地を計算
	LD	GR5,0,GR4	; 出力する文字をレジスタにコピー
	LD	GR4,GR7
	ADDA	GR4,GR6	; 出力先の番地を計算
	ST	GR5,0,GR4	; 出力装置に書き出し
	LAD	GR3,1,GR3
	LAD	GR6,1,GR6
	JUMP	LOOP
END	POP	GR5
	POP	GR4
	POP	GR3
	RET
	END
;============================================================
; 改行を出力装置に書き出すサブルーチン
; 実質的には，GR7で始まるアドレス番地から長さGR6の文字列を出力する
WRTLN	START
	PUSH	0,GR1
	PUSH	0,GR2
	PUSH	0,GR3
	ST	GR6,OUTLEN
	LAD	GR1,0
LOOP	CPA	GR1,OUTLEN
	JZE	END
	LD	GR2,GR7
	ADDA	GR2,GR1
	LD	GR3,0,GR2
	ST	GR3,OUTSTR,GR1
	LAD	GR1,1,GR1
	JUMP	LOOP
END	OUT	OUTSTR,OUTLEN
	LAD	GR6,0	; 文字列を出力して，GR6を初期化
	POP	GR3
	POP	GR2
	POP	GR1
	RET
OUTSTR	DS	256
OUTLEN	DS	1
	END
